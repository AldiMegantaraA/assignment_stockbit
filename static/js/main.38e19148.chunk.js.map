{"version":3,"sources":["firebase/firebase.utils.js","redux/cart/cart.types.js","redux/cart/cart.action.js","components/collection-item/collection-item.component.jsx","components/custom-button/custom-button.component.jsx","components/preview-collection/collection-preview.component.jsx","pages/shop/shop.component.jsx","components/header/header.component.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-up/sign-in-and-up.component.jsx","redux/user/user.types.js","App.js","redux/user/user.action.js","reportWebVitals.js","redux/user/user.reducer.jsx","redux/cart/cart.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","CartActionTypes","TOGGLE_CART_HIDDEN","SET_CART_DATA","FETCH_CART_DATA","fetchCartData","dispatch","axios","res","data","type","payload","error","CollectionItem","CustomButton","children","isGoogleSignIn","otherProps","className","CollectionPreview","carCart","useState","quantity","toogleComponent","onClick","style","background","border","src","Poster","alt","offsetX","offsetY","alignItems","justifyContent","display","flexDirection","width","height","margin","Year","imdbID","Title","ShopPage","handleChange","useDispatch","shopData","useSelector","state","cart","cartData","useEffect","today","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","map","index","connect","currentUser","user","hidden","placeholder","to","onChange","signOut","FormInput","label","value","length","SignIn","props","handleSubmit","event","preventDefault","password","signInWithEmailAndPassword","setState","target","name","onSubmit","this","required","React","Component","SignUp","confirmPassword","alert","createUserWithEmailAndPassword","handeChange","SignInAndSignUpPage","UserActionsTypes","App","unsubscribeFromAuth","setCurrentUser","onAuthStateChanged","onSnapshot","snapShot","id","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","userReducer","action","cartReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.38e19148.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAn1CToy57fNLbFlWijRQKMKl0fs9iZ0As\",\r\n    authDomain: \"crwn-db-5892e.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-5892e-default-rtdb.firebaseio.com\",\r\n    projectId: \"crwn-db-5892e\",\r\n    storageBucket: \"crwn-db-5892e.appspot.com\",\r\n    messagingSenderId: \"876786602814\",\r\n    appId: \"1:876786602814:web:c377f4be3a51c1592e126f\",\r\n    measurementId: \"G-16W8E73QJG\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists) {\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (error) {\r\n            console.log('error creating user')\r\n        }\r\n    }\r\n    return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;","const CartActionTypes = {\r\n    TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\r\n    SET_CART_DATA: 'SET_CART_DATA',\r\n    FETCH_CART_DATA: 'FETCH_CART_DATA'\r\n}\r\n\r\nexport default CartActionTypes;","import CartActionTypes from './cart.types';\r\nimport axios from 'axios';\r\n\r\nexport const toggleCartHidden = () => ({\r\n    type: CartActionTypes.TOGGLE_CART_HIDDEN\r\n});\r\n\r\nexport const setCartData = (payload) => {\r\n    return {type:CartActionTypes.FETCH_CART_DATA, payload}\r\n}\r\n\r\nexport const fetchCartData = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get('http://www.omdbapi.com?apikey=faf7e5bb&s=Batman&page=2')\r\n            const {data} = res\r\n            // console.log(data)\r\n            dispatch(setCartData(data))\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport CollectionPreview from '../preview-collection/collection-preview.component'\r\n\r\nimport './collection-item.styles.scss';\r\n\r\nfunction CollectionItem({carCart}) {\r\n    return (\r\n        <div className='collection-item'>\r\n            <div className='image' style={{backgroundImage: `url(${carCart.Poster})`}} />\r\n            <div className='collection-footer'>\r\n                <span className='name'>{carCart.Title}</span>\r\n                <span className='price'>{carCart.Year}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CollectionItem;","import React from 'react';\r\n\r\nimport './custom-button.styles.scss';\r\n\r\n\r\nconst CustomButton = ({children, isGoogleSignIn, ...otherProps}) => (\r\n    <button className={`${isGoogleSignIn ? 'google-sign-in' : ''} custom-button`} {...otherProps}>\r\n        {children}\r\n    </button>\r\n);\r\n\r\nexport default CustomButton;","import React, {useState} from 'react';\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\nimport './collection-preview.styles.scss';\r\nimport ReactCircleModal from 'react-circle-modal'\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nfunction CollectionPreview({carCart}) {\r\n    // console.log(carCart)\r\n    const [qty, setQty] = useState(carCart.quantity)\r\n    function handleChange(e) {\r\n        setQty(e.target.value)\r\n    }\r\n    return (\r\n        <div className='collection-preview'>\r\n            <ReactCircleModal \r\n                    toogleComponent={onClick => (\r\n                        <button onClick={onClick} style={{background:'none', border:'none'}}>\r\n                        <img className='image' src={carCart.Poster} alt=\"\" />\r\n                        </button>\r\n                    )}\r\n                    offsetX={0}\r\n                    offsetY={0}\r\n                    >\r\n                    {(onClick) => (\r\n                        <div style={{alignItems:'center', justifyContent:'space-between', display: 'flex', flexDirection: 'column'}}>\r\n                            <img src={carCart.Poster} style={{width: '24rem', height: 'auto', margin: '20px'}} alt=\"\" />\r\n                            <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between'}}>\r\n                                <CustomButton>\r\n                                    Watch Now\r\n                                </CustomButton>\r\n                                <CustomButton onClick={onClick}>\r\n                                    Close\r\n                                </CustomButton>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </ReactCircleModal>\r\n            <div className='card-movie'>\r\n                <div className='year'>{carCart.Year} <span className='id'>ImdbID : {carCart.imdbID}</span></div>\r\n                <div className='title'>{carCart.Title}</div>\r\n            </div>\r\n            <div className='content'>\r\n                <span className='subtitle'>WATCH NOW</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CollectionPreview;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {fetchCartData} from '../../redux/cart/cart.action.js';\r\n\r\nimport './shop.styles.scss'\r\nimport CollectionPreview from '../../components/preview-collection/collection-preview.component';\r\n\r\nfunction ShopPage({handleChange}) {\r\n    const dispatch = useDispatch()\r\n    const shopData = useSelector(state => state.cart.cartData)\r\n    useEffect(() => {\r\n        dispatch(fetchCartData())\r\n        console.log(shopData)\r\n    }, [dispatch] ) \r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n                        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n                       ];\r\n    var today = new Date();\r\n    var month = monthNames[today.getMonth()];\r\n    var date = today.getDate();\r\n    var year = today.getFullYear();\r\n\r\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n\r\n    var dateTime = month+' '+ ' ' + date + ', ' + time;\r\n    // console.log(shopData)\r\n    return (\r\n        <div className='shop-page'>\r\n            {\r\n                shopData['Search']?.map((data, index) =>(\r\n                    // console.log(data)\r\n                    <CollectionPreview key={index} carCart={data} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// class ShopPage extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             collections: SHOP_DATA\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         const {collections} = this.state;\r\n//         return(\r\n//             (<div className='shop-page'>\r\n//                 {\r\n//                     collections.map(({id, ...otherCollectionProps}) =>(\r\n//                         <CollectionPreview key={id} {...otherCollectionProps} />\r\n//                     ))\r\n//                 }\r\n//             </div>)\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default ShopPage;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n// import {ReactComponent as Logo} from '../../assets/toko aldi.svg';\r\n\r\nimport './header.styles.scss';\r\nimport {auth} from '../../firebase/firebase.utils';\r\n\r\n\r\n\r\nconst Header = ({currentUser, hidden, carCart, placeholder, handleChange}) => (\r\n    <div className='header'>\r\n        <Link className='logo-container' to='/'>\r\n            alflix\r\n        </Link>\r\n        <div className='options'>\r\n            <input\r\n                className='search'\r\n                type='search'\r\n                placeholder='Search movie'\r\n                onChange={handleChange} />\r\n            {\r\n                currentUser ?\r\n                <div className='option' onClick={() => auth.signOut()}>Welcome <strong>{currentUser.displayName}</strong>!</div>\r\n                :\r\n                <Link className='option' to='/signin'>SIGN IN</Link>\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = ({user: {currentUser}, cart: {hidden}}) => ({\r\n    currentUser,\r\n    hidden\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({handleChange, label, ...otherProps}) => (\r\n    <div className='group'>\r\n        <input className='form-input' onChange={handleChange} {...otherProps} />\r\n        {\r\n            label ?\r\n            (<label className={`${otherProps.value.length ? `shrink` : ''} form-input-label`}>\r\n                {label}\r\n            </label>) : null\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-in.styles.scss';\r\n\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit =async event => {\r\n        event.preventDefault();\r\n\r\n        const {email, password} = this.state;\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({email:'', password:''})\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {value, name} = event.target;\r\n\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput name='email' type=\"email\" handleChange={this.handleChange} label=\"Email\" value={this.state.email} required />\r\n                    <FormInput name='password' type=\"password\" handleChange={this.handleChange} label=\"Password\" value={this.state.password} required />\r\n                    <div className='buttons'>\r\n                        <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                        <CustomButton type='button' onClick={signInWithGoogle} isGoogleSignIn>\r\n                            {' '}\r\n                            Sign in with Google{' '}\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n\r\n        if(password !== confirmPassword) {\r\n            alert('Password dont maatch')\r\n            return\r\n        }\r\n\r\n        try{\r\n            const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            await createUserProfileDocument(user, {displayName});\r\n\r\n            this.setState({\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            })\r\n        } catch (error) {\r\n            console.error(error);\r\n        }     \r\n    };\r\n\r\n    handeChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({[name]: value});\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {displayName, email, password, confirmPassword} = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput type='text' name='displayName' value={displayName} onChange={this.handeChange} label='Display Name' required />\r\n                    <FormInput type='email' name='email' value={email} onChange={this.handeChange} label='Email' required />\r\n                    <FormInput type='password' name='password' value={password} onChange={this.handeChange} label='Password' required />\r\n                    <FormInput type='password' name='confirmPassword' value={confirmPassword} onChange={this.handeChange} label='Confirm Password' required />\r\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n export default SignUp;","import React from 'react';\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport './sign-in-and-up.styles.scss';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\n\r\nconst SignInAndSignUpPage = () => (\r\n    <div className='sign-in-and-sign-up'>\r\n        <SignIn />\r\n        <SignUp />\r\n    </div>\r\n);\r\nexport default SignInAndSignUpPage;","export const UserActionsTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\r\n}","import React from 'react';\nimport './App.css';\nimport {auth, createUserProfileDocument} from './firebase/firebase.utils';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-up/sign-in-and-up.component';\nimport {setCurrentUser} from './redux/user/user.action'\n\n\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    const {setCurrentUser} =this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          this.props.setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={ShopPage} />\n          <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : (<SignInAndSignUpPage />)} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({user}) => ({\n  currentUser: user.currentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {UserActionsTypes} from './user.types';\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: UserActionsTypes.SET_CURRENT_USER,\r\n    payload: user\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {UserActionTypes} from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_USER':\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n","import CartActionTypes from './cart.types';\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartData: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            }\r\n            case CartActionTypes.FETCH_CART_DATA:\r\n                return {\r\n                    ...state,\r\n                    cartData: action.payload\r\n                }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import {combineReducers} from 'redux';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport cartReducer from './cart/cart.reducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer\r\n});","import {createStore, applyMiddleware} from 'redux'; \r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n// const middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}